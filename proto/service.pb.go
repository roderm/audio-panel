// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/service.proto

package proto // import "github.com/roderm/audio-panel/proto"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/golang/protobuf/ptypes/any"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Null struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Null) Reset()         { *m = Null{} }
func (m *Null) String() string { return proto.CompactTextString(m) }
func (*Null) ProtoMessage()    {}
func (*Null) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_cbcd1741cbb3dc10, []int{0}
}
func (m *Null) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Null.Unmarshal(m, b)
}
func (m *Null) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Null.Marshal(b, m, deterministic)
}
func (dst *Null) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Null.Merge(dst, src)
}
func (m *Null) XXX_Size() int {
	return xxx_messageInfo_Null.Size(m)
}
func (m *Null) XXX_DiscardUnknown() {
	xxx_messageInfo_Null.DiscardUnknown(m)
}

var xxx_messageInfo_Null proto.InternalMessageInfo

type AVR struct {
	Id                   int64                `protobuf:"varint,1,opt,name=id" json:"id"`
	Power                bool                 `protobuf:"varint,2,opt,name=power" json:"power"`
	Zones                map[string]*AVR_Zone `protobuf:"bytes,3,rep,name=zones" json:"zones" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	InputSources         map[string]string    `protobuf:"bytes,4,rep,name=inputSources" json:"inputSources" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Name                 string               `protobuf:"bytes,5,opt,name=Name" json:"Name"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *AVR) Reset()         { *m = AVR{} }
func (m *AVR) String() string { return proto.CompactTextString(m) }
func (*AVR) ProtoMessage()    {}
func (*AVR) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_cbcd1741cbb3dc10, []int{1}
}
func (m *AVR) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AVR.Unmarshal(m, b)
}
func (m *AVR) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AVR.Marshal(b, m, deterministic)
}
func (dst *AVR) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AVR.Merge(dst, src)
}
func (m *AVR) XXX_Size() int {
	return xxx_messageInfo_AVR.Size(m)
}
func (m *AVR) XXX_DiscardUnknown() {
	xxx_messageInfo_AVR.DiscardUnknown(m)
}

var xxx_messageInfo_AVR proto.InternalMessageInfo

func (m *AVR) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *AVR) GetPower() bool {
	if m != nil {
		return m.Power
	}
	return false
}

func (m *AVR) GetZones() map[string]*AVR_Zone {
	if m != nil {
		return m.Zones
	}
	return nil
}

func (m *AVR) GetInputSources() map[string]string {
	if m != nil {
		return m.InputSources
	}
	return nil
}

func (m *AVR) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type AVR_Zone struct {
	Power                bool                     `protobuf:"varint,1,opt,name=power" json:"power"`
	Name                 string                   `protobuf:"bytes,2,opt,name=name" json:"name"`
	Volume               int32                    `protobuf:"varint,3,opt,name=volume" json:"volume"`
	IsMain               bool                     `protobuf:"varint,4,opt,name=isMain" json:"isMain"`
	CurrentSource        string                   `protobuf:"bytes,5,opt,name=currentSource" json:"currentSource"`
	SyncVol              bool                     `protobuf:"varint,6,opt,name=syncVol" json:"syncVol"`
	SyncSrc              bool                     `protobuf:"varint,7,opt,name=syncSrc" json:"syncSrc"`
	Mute                 bool                     `protobuf:"varint,8,opt,name=mute" json:"mute"`
	CurrentListeningMod  string                   `protobuf:"bytes,9,opt,name=currentListeningMod" json:"currentListeningMod"`
	ListeningMods        []*AVR_Zone_ListeningMod `protobuf:"bytes,10,rep,name=listeningMods" json:"listeningMods"`
	Sources              []*AVR_Zone_Source       `protobuf:"bytes,11,rep,name=sources" json:"sources"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *AVR_Zone) Reset()         { *m = AVR_Zone{} }
func (m *AVR_Zone) String() string { return proto.CompactTextString(m) }
func (*AVR_Zone) ProtoMessage()    {}
func (*AVR_Zone) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_cbcd1741cbb3dc10, []int{1, 0}
}
func (m *AVR_Zone) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AVR_Zone.Unmarshal(m, b)
}
func (m *AVR_Zone) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AVR_Zone.Marshal(b, m, deterministic)
}
func (dst *AVR_Zone) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AVR_Zone.Merge(dst, src)
}
func (m *AVR_Zone) XXX_Size() int {
	return xxx_messageInfo_AVR_Zone.Size(m)
}
func (m *AVR_Zone) XXX_DiscardUnknown() {
	xxx_messageInfo_AVR_Zone.DiscardUnknown(m)
}

var xxx_messageInfo_AVR_Zone proto.InternalMessageInfo

func (m *AVR_Zone) GetPower() bool {
	if m != nil {
		return m.Power
	}
	return false
}

func (m *AVR_Zone) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AVR_Zone) GetVolume() int32 {
	if m != nil {
		return m.Volume
	}
	return 0
}

func (m *AVR_Zone) GetIsMain() bool {
	if m != nil {
		return m.IsMain
	}
	return false
}

func (m *AVR_Zone) GetCurrentSource() string {
	if m != nil {
		return m.CurrentSource
	}
	return ""
}

func (m *AVR_Zone) GetSyncVol() bool {
	if m != nil {
		return m.SyncVol
	}
	return false
}

func (m *AVR_Zone) GetSyncSrc() bool {
	if m != nil {
		return m.SyncSrc
	}
	return false
}

func (m *AVR_Zone) GetMute() bool {
	if m != nil {
		return m.Mute
	}
	return false
}

func (m *AVR_Zone) GetCurrentListeningMod() string {
	if m != nil {
		return m.CurrentListeningMod
	}
	return ""
}

func (m *AVR_Zone) GetListeningMods() []*AVR_Zone_ListeningMod {
	if m != nil {
		return m.ListeningMods
	}
	return nil
}

func (m *AVR_Zone) GetSources() []*AVR_Zone_Source {
	if m != nil {
		return m.Sources
	}
	return nil
}

type AVR_Zone_ListeningMod struct {
	Code                 string   `protobuf:"bytes,1,opt,name=Code" json:"Code"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name" json:"Name"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AVR_Zone_ListeningMod) Reset()         { *m = AVR_Zone_ListeningMod{} }
func (m *AVR_Zone_ListeningMod) String() string { return proto.CompactTextString(m) }
func (*AVR_Zone_ListeningMod) ProtoMessage()    {}
func (*AVR_Zone_ListeningMod) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_cbcd1741cbb3dc10, []int{1, 0, 0}
}
func (m *AVR_Zone_ListeningMod) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AVR_Zone_ListeningMod.Unmarshal(m, b)
}
func (m *AVR_Zone_ListeningMod) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AVR_Zone_ListeningMod.Marshal(b, m, deterministic)
}
func (dst *AVR_Zone_ListeningMod) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AVR_Zone_ListeningMod.Merge(dst, src)
}
func (m *AVR_Zone_ListeningMod) XXX_Size() int {
	return xxx_messageInfo_AVR_Zone_ListeningMod.Size(m)
}
func (m *AVR_Zone_ListeningMod) XXX_DiscardUnknown() {
	xxx_messageInfo_AVR_Zone_ListeningMod.DiscardUnknown(m)
}

var xxx_messageInfo_AVR_Zone_ListeningMod proto.InternalMessageInfo

func (m *AVR_Zone_ListeningMod) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *AVR_Zone_ListeningMod) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type AVR_Zone_Source struct {
	Code                 string   `protobuf:"bytes,1,opt,name=Code" json:"Code"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name" json:"Name"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AVR_Zone_Source) Reset()         { *m = AVR_Zone_Source{} }
func (m *AVR_Zone_Source) String() string { return proto.CompactTextString(m) }
func (*AVR_Zone_Source) ProtoMessage()    {}
func (*AVR_Zone_Source) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_cbcd1741cbb3dc10, []int{1, 0, 1}
}
func (m *AVR_Zone_Source) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AVR_Zone_Source.Unmarshal(m, b)
}
func (m *AVR_Zone_Source) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AVR_Zone_Source.Marshal(b, m, deterministic)
}
func (dst *AVR_Zone_Source) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AVR_Zone_Source.Merge(dst, src)
}
func (m *AVR_Zone_Source) XXX_Size() int {
	return xxx_messageInfo_AVR_Zone_Source.Size(m)
}
func (m *AVR_Zone_Source) XXX_DiscardUnknown() {
	xxx_messageInfo_AVR_Zone_Source.DiscardUnknown(m)
}

var xxx_messageInfo_AVR_Zone_Source proto.InternalMessageInfo

func (m *AVR_Zone_Source) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *AVR_Zone_Source) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type AVR_PowerToggle struct {
	IP                   string   `protobuf:"bytes,1,opt,name=IP" json:"IP"`
	On                   bool     `protobuf:"varint,2,opt,name=On" json:"On"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AVR_PowerToggle) Reset()         { *m = AVR_PowerToggle{} }
func (m *AVR_PowerToggle) String() string { return proto.CompactTextString(m) }
func (*AVR_PowerToggle) ProtoMessage()    {}
func (*AVR_PowerToggle) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_cbcd1741cbb3dc10, []int{2}
}
func (m *AVR_PowerToggle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AVR_PowerToggle.Unmarshal(m, b)
}
func (m *AVR_PowerToggle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AVR_PowerToggle.Marshal(b, m, deterministic)
}
func (dst *AVR_PowerToggle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AVR_PowerToggle.Merge(dst, src)
}
func (m *AVR_PowerToggle) XXX_Size() int {
	return xxx_messageInfo_AVR_PowerToggle.Size(m)
}
func (m *AVR_PowerToggle) XXX_DiscardUnknown() {
	xxx_messageInfo_AVR_PowerToggle.DiscardUnknown(m)
}

var xxx_messageInfo_AVR_PowerToggle proto.InternalMessageInfo

func (m *AVR_PowerToggle) GetIP() string {
	if m != nil {
		return m.IP
	}
	return ""
}

func (m *AVR_PowerToggle) GetOn() bool {
	if m != nil {
		return m.On
	}
	return false
}

type ZoneUpdate struct {
	AVR_IP               string   `protobuf:"bytes,1,opt,name=AVR_IP,json=AVRIP" json:"AVR_IP"`
	Zone_Name            string   `protobuf:"bytes,2,opt,name=Zone_Name,json=ZoneName" json:"Zone_Name"`
	State                bool     `protobuf:"varint,3,opt,name=State" json:"State"`
	Volume               int32    `protobuf:"varint,4,opt,name=Volume" json:"Volume"`
	Source               int32    `protobuf:"varint,5,opt,name=Source" json:"Source"`
	SyncVol              bool     `protobuf:"varint,6,opt,name=SyncVol" json:"SyncVol"`
	SyncSrc              bool     `protobuf:"varint,7,opt,name=SyncSrc" json:"SyncSrc"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ZoneUpdate) Reset()         { *m = ZoneUpdate{} }
func (m *ZoneUpdate) String() string { return proto.CompactTextString(m) }
func (*ZoneUpdate) ProtoMessage()    {}
func (*ZoneUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_cbcd1741cbb3dc10, []int{3}
}
func (m *ZoneUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZoneUpdate.Unmarshal(m, b)
}
func (m *ZoneUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZoneUpdate.Marshal(b, m, deterministic)
}
func (dst *ZoneUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZoneUpdate.Merge(dst, src)
}
func (m *ZoneUpdate) XXX_Size() int {
	return xxx_messageInfo_ZoneUpdate.Size(m)
}
func (m *ZoneUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_ZoneUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_ZoneUpdate proto.InternalMessageInfo

func (m *ZoneUpdate) GetAVR_IP() string {
	if m != nil {
		return m.AVR_IP
	}
	return ""
}

func (m *ZoneUpdate) GetZone_Name() string {
	if m != nil {
		return m.Zone_Name
	}
	return ""
}

func (m *ZoneUpdate) GetState() bool {
	if m != nil {
		return m.State
	}
	return false
}

func (m *ZoneUpdate) GetVolume() int32 {
	if m != nil {
		return m.Volume
	}
	return 0
}

func (m *ZoneUpdate) GetSource() int32 {
	if m != nil {
		return m.Source
	}
	return 0
}

func (m *ZoneUpdate) GetSyncVol() bool {
	if m != nil {
		return m.SyncVol
	}
	return false
}

func (m *ZoneUpdate) GetSyncSrc() bool {
	if m != nil {
		return m.SyncSrc
	}
	return false
}

type Light struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name" json:"Name"`
	Power                bool     `protobuf:"varint,2,opt,name=Power" json:"Power"`
	Brightness           int32    `protobuf:"varint,3,opt,name=Brightness" json:"Brightness"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Light) Reset()         { *m = Light{} }
func (m *Light) String() string { return proto.CompactTextString(m) }
func (*Light) ProtoMessage()    {}
func (*Light) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_cbcd1741cbb3dc10, []int{4}
}
func (m *Light) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Light.Unmarshal(m, b)
}
func (m *Light) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Light.Marshal(b, m, deterministic)
}
func (dst *Light) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Light.Merge(dst, src)
}
func (m *Light) XXX_Size() int {
	return xxx_messageInfo_Light.Size(m)
}
func (m *Light) XXX_DiscardUnknown() {
	xxx_messageInfo_Light.DiscardUnknown(m)
}

var xxx_messageInfo_Light proto.InternalMessageInfo

func (m *Light) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Light) GetPower() bool {
	if m != nil {
		return m.Power
	}
	return false
}

func (m *Light) GetBrightness() int32 {
	if m != nil {
		return m.Brightness
	}
	return 0
}

type Device struct {
	Identifier           string   `protobuf:"bytes,1,opt,name=Identifier" json:"Identifier"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name" json:"Name"`
	Items                []*Item  `protobuf:"bytes,10,rep,name=Items" json:"Items"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Device) Reset()         { *m = Device{} }
func (m *Device) String() string { return proto.CompactTextString(m) }
func (*Device) ProtoMessage()    {}
func (*Device) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_cbcd1741cbb3dc10, []int{5}
}
func (m *Device) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Device.Unmarshal(m, b)
}
func (m *Device) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Device.Marshal(b, m, deterministic)
}
func (dst *Device) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Device.Merge(dst, src)
}
func (m *Device) XXX_Size() int {
	return xxx_messageInfo_Device.Size(m)
}
func (m *Device) XXX_DiscardUnknown() {
	xxx_messageInfo_Device.DiscardUnknown(m)
}

var xxx_messageInfo_Device proto.InternalMessageInfo

func (m *Device) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *Device) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Device) GetItems() []*Item {
	if m != nil {
		return m.Items
	}
	return nil
}

type Item struct {
	Identifier           string      `protobuf:"bytes,1,opt,name=Identifier" json:"Identifier"`
	Name                 string      `protobuf:"bytes,2,opt,name=Name" json:"Name"`
	Type                 string      `protobuf:"bytes,3,opt,name=Type" json:"Type"`
	Properties           []*Property `protobuf:"bytes,10,rep,name=Properties" json:"Properties"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Item) Reset()         { *m = Item{} }
func (m *Item) String() string { return proto.CompactTextString(m) }
func (*Item) ProtoMessage()    {}
func (*Item) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_cbcd1741cbb3dc10, []int{6}
}
func (m *Item) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Item.Unmarshal(m, b)
}
func (m *Item) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Item.Marshal(b, m, deterministic)
}
func (dst *Item) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Item.Merge(dst, src)
}
func (m *Item) XXX_Size() int {
	return xxx_messageInfo_Item.Size(m)
}
func (m *Item) XXX_DiscardUnknown() {
	xxx_messageInfo_Item.DiscardUnknown(m)
}

var xxx_messageInfo_Item proto.InternalMessageInfo

func (m *Item) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *Item) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Item) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Item) GetProperties() []*Property {
	if m != nil {
		return m.Properties
	}
	return nil
}

type Property struct {
	Name string `protobuf:"bytes,1,opt,name=Name" json:"Name"`
	// Types that are valid to be assigned to Value:
	//	*Property_Boolean
	//	*Property_Number
	//	*Property_Decimal
	//	*Property_Text
	//	*Property_List
	Value                isProperty_Value `protobuf_oneof:"Value"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Property) Reset()         { *m = Property{} }
func (m *Property) String() string { return proto.CompactTextString(m) }
func (*Property) ProtoMessage()    {}
func (*Property) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_cbcd1741cbb3dc10, []int{7}
}
func (m *Property) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Property.Unmarshal(m, b)
}
func (m *Property) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Property.Marshal(b, m, deterministic)
}
func (dst *Property) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Property.Merge(dst, src)
}
func (m *Property) XXX_Size() int {
	return xxx_messageInfo_Property.Size(m)
}
func (m *Property) XXX_DiscardUnknown() {
	xxx_messageInfo_Property.DiscardUnknown(m)
}

var xxx_messageInfo_Property proto.InternalMessageInfo

type isProperty_Value interface {
	isProperty_Value()
}

type Property_Boolean struct {
	Boolean bool `protobuf:"varint,2,opt,name=Boolean,oneof"`
}
type Property_Number struct {
	Number int64 `protobuf:"varint,3,opt,name=Number,oneof"`
}
type Property_Decimal struct {
	Decimal float32 `protobuf:"fixed32,4,opt,name=Decimal,oneof"`
}
type Property_Text struct {
	Text string `protobuf:"bytes,5,opt,name=Text,oneof"`
}
type Property_List struct {
	List *ValueList `protobuf:"bytes,6,opt,name=List,oneof"`
}

func (*Property_Boolean) isProperty_Value() {}
func (*Property_Number) isProperty_Value()  {}
func (*Property_Decimal) isProperty_Value() {}
func (*Property_Text) isProperty_Value()    {}
func (*Property_List) isProperty_Value()    {}

func (m *Property) GetValue() isProperty_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Property) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Property) GetBoolean() bool {
	if x, ok := m.GetValue().(*Property_Boolean); ok {
		return x.Boolean
	}
	return false
}

func (m *Property) GetNumber() int64 {
	if x, ok := m.GetValue().(*Property_Number); ok {
		return x.Number
	}
	return 0
}

func (m *Property) GetDecimal() float32 {
	if x, ok := m.GetValue().(*Property_Decimal); ok {
		return x.Decimal
	}
	return 0
}

func (m *Property) GetText() string {
	if x, ok := m.GetValue().(*Property_Text); ok {
		return x.Text
	}
	return ""
}

func (m *Property) GetList() *ValueList {
	if x, ok := m.GetValue().(*Property_List); ok {
		return x.List
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Property) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Property_OneofMarshaler, _Property_OneofUnmarshaler, _Property_OneofSizer, []interface{}{
		(*Property_Boolean)(nil),
		(*Property_Number)(nil),
		(*Property_Decimal)(nil),
		(*Property_Text)(nil),
		(*Property_List)(nil),
	}
}

func _Property_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Property)
	// Value
	switch x := m.Value.(type) {
	case *Property_Boolean:
		t := uint64(0)
		if x.Boolean {
			t = 1
		}
		b.EncodeVarint(2<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case *Property_Number:
		b.EncodeVarint(3<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Number))
	case *Property_Decimal:
		b.EncodeVarint(4<<3 | proto.WireFixed32)
		b.EncodeFixed32(uint64(math.Float32bits(x.Decimal)))
	case *Property_Text:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Text)
	case *Property_List:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.List); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Property.Value has unexpected type %T", x)
	}
	return nil
}

func _Property_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Property)
	switch tag {
	case 2: // Value.Boolean
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Value = &Property_Boolean{x != 0}
		return true, err
	case 3: // Value.Number
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Value = &Property_Number{int64(x)}
		return true, err
	case 4: // Value.Decimal
		if wire != proto.WireFixed32 {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeFixed32()
		m.Value = &Property_Decimal{math.Float32frombits(uint32(x))}
		return true, err
	case 5: // Value.Text
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Value = &Property_Text{x}
		return true, err
	case 6: // Value.List
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ValueList)
		err := b.DecodeMessage(msg)
		m.Value = &Property_List{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Property_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Property)
	// Value
	switch x := m.Value.(type) {
	case *Property_Boolean:
		n += 1 // tag and wire
		n += 1
	case *Property_Number:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.Number))
	case *Property_Decimal:
		n += 1 // tag and wire
		n += 4
	case *Property_Text:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Text)))
		n += len(x.Text)
	case *Property_List:
		s := proto.Size(x.List)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ValueList struct {
	KeyActive            string       `protobuf:"bytes,1,opt,name=KeyActive" json:"KeyActive"`
	Values               []*ListValue `protobuf:"bytes,2,rep,name=Values" json:"Values"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ValueList) Reset()         { *m = ValueList{} }
func (m *ValueList) String() string { return proto.CompactTextString(m) }
func (*ValueList) ProtoMessage()    {}
func (*ValueList) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_cbcd1741cbb3dc10, []int{8}
}
func (m *ValueList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValueList.Unmarshal(m, b)
}
func (m *ValueList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValueList.Marshal(b, m, deterministic)
}
func (dst *ValueList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValueList.Merge(dst, src)
}
func (m *ValueList) XXX_Size() int {
	return xxx_messageInfo_ValueList.Size(m)
}
func (m *ValueList) XXX_DiscardUnknown() {
	xxx_messageInfo_ValueList.DiscardUnknown(m)
}

var xxx_messageInfo_ValueList proto.InternalMessageInfo

func (m *ValueList) GetKeyActive() string {
	if m != nil {
		return m.KeyActive
	}
	return ""
}

func (m *ValueList) GetValues() []*ListValue {
	if m != nil {
		return m.Values
	}
	return nil
}

type ListValue struct {
	Key    string `protobuf:"bytes,1,opt,name=Key" json:"Key"`
	Active bool   `protobuf:"varint,2,opt,name=Active" json:"Active"`
	// Types that are valid to be assigned to Value:
	//	*ListValue_Boolean
	//	*ListValue_Number
	//	*ListValue_Decimal
	//	*ListValue_Text
	Value                isListValue_Value `protobuf_oneof:"Value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ListValue) Reset()         { *m = ListValue{} }
func (m *ListValue) String() string { return proto.CompactTextString(m) }
func (*ListValue) ProtoMessage()    {}
func (*ListValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_cbcd1741cbb3dc10, []int{9}
}
func (m *ListValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListValue.Unmarshal(m, b)
}
func (m *ListValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListValue.Marshal(b, m, deterministic)
}
func (dst *ListValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListValue.Merge(dst, src)
}
func (m *ListValue) XXX_Size() int {
	return xxx_messageInfo_ListValue.Size(m)
}
func (m *ListValue) XXX_DiscardUnknown() {
	xxx_messageInfo_ListValue.DiscardUnknown(m)
}

var xxx_messageInfo_ListValue proto.InternalMessageInfo

type isListValue_Value interface {
	isListValue_Value()
}

type ListValue_Boolean struct {
	Boolean bool `protobuf:"varint,3,opt,name=Boolean,oneof"`
}
type ListValue_Number struct {
	Number int64 `protobuf:"varint,4,opt,name=Number,oneof"`
}
type ListValue_Decimal struct {
	Decimal float32 `protobuf:"fixed32,5,opt,name=Decimal,oneof"`
}
type ListValue_Text struct {
	Text string `protobuf:"bytes,6,opt,name=Text,oneof"`
}

func (*ListValue_Boolean) isListValue_Value() {}
func (*ListValue_Number) isListValue_Value()  {}
func (*ListValue_Decimal) isListValue_Value() {}
func (*ListValue_Text) isListValue_Value()    {}

func (m *ListValue) GetValue() isListValue_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *ListValue) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *ListValue) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

func (m *ListValue) GetBoolean() bool {
	if x, ok := m.GetValue().(*ListValue_Boolean); ok {
		return x.Boolean
	}
	return false
}

func (m *ListValue) GetNumber() int64 {
	if x, ok := m.GetValue().(*ListValue_Number); ok {
		return x.Number
	}
	return 0
}

func (m *ListValue) GetDecimal() float32 {
	if x, ok := m.GetValue().(*ListValue_Decimal); ok {
		return x.Decimal
	}
	return 0
}

func (m *ListValue) GetText() string {
	if x, ok := m.GetValue().(*ListValue_Text); ok {
		return x.Text
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ListValue) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ListValue_OneofMarshaler, _ListValue_OneofUnmarshaler, _ListValue_OneofSizer, []interface{}{
		(*ListValue_Boolean)(nil),
		(*ListValue_Number)(nil),
		(*ListValue_Decimal)(nil),
		(*ListValue_Text)(nil),
	}
}

func _ListValue_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ListValue)
	// Value
	switch x := m.Value.(type) {
	case *ListValue_Boolean:
		t := uint64(0)
		if x.Boolean {
			t = 1
		}
		b.EncodeVarint(3<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case *ListValue_Number:
		b.EncodeVarint(4<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Number))
	case *ListValue_Decimal:
		b.EncodeVarint(5<<3 | proto.WireFixed32)
		b.EncodeFixed32(uint64(math.Float32bits(x.Decimal)))
	case *ListValue_Text:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Text)
	case nil:
	default:
		return fmt.Errorf("ListValue.Value has unexpected type %T", x)
	}
	return nil
}

func _ListValue_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ListValue)
	switch tag {
	case 3: // Value.Boolean
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Value = &ListValue_Boolean{x != 0}
		return true, err
	case 4: // Value.Number
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Value = &ListValue_Number{int64(x)}
		return true, err
	case 5: // Value.Decimal
		if wire != proto.WireFixed32 {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeFixed32()
		m.Value = &ListValue_Decimal{math.Float32frombits(uint32(x))}
		return true, err
	case 6: // Value.Text
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Value = &ListValue_Text{x}
		return true, err
	default:
		return false, nil
	}
}

func _ListValue_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ListValue)
	// Value
	switch x := m.Value.(type) {
	case *ListValue_Boolean:
		n += 1 // tag and wire
		n += 1
	case *ListValue_Number:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.Number))
	case *ListValue_Decimal:
		n += 1 // tag and wire
		n += 4
	case *ListValue_Text:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Text)))
		n += len(x.Text)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type PropertyUpdate struct {
	DeviceIdentifier     string    `protobuf:"bytes,1,opt,name=DeviceIdentifier" json:"DeviceIdentifier"`
	ItemIdentifier       string    `protobuf:"bytes,2,opt,name=ItemIdentifier" json:"ItemIdentifier"`
	Property             *Property `protobuf:"bytes,3,opt,name=Property" json:"Property"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *PropertyUpdate) Reset()         { *m = PropertyUpdate{} }
func (m *PropertyUpdate) String() string { return proto.CompactTextString(m) }
func (*PropertyUpdate) ProtoMessage()    {}
func (*PropertyUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_cbcd1741cbb3dc10, []int{10}
}
func (m *PropertyUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PropertyUpdate.Unmarshal(m, b)
}
func (m *PropertyUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PropertyUpdate.Marshal(b, m, deterministic)
}
func (dst *PropertyUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PropertyUpdate.Merge(dst, src)
}
func (m *PropertyUpdate) XXX_Size() int {
	return xxx_messageInfo_PropertyUpdate.Size(m)
}
func (m *PropertyUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_PropertyUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_PropertyUpdate proto.InternalMessageInfo

func (m *PropertyUpdate) GetDeviceIdentifier() string {
	if m != nil {
		return m.DeviceIdentifier
	}
	return ""
}

func (m *PropertyUpdate) GetItemIdentifier() string {
	if m != nil {
		return m.ItemIdentifier
	}
	return ""
}

func (m *PropertyUpdate) GetProperty() *Property {
	if m != nil {
		return m.Property
	}
	return nil
}

func init() {
	proto.RegisterType((*Null)(nil), "null")
	proto.RegisterType((*AVR)(nil), "AVR")
	proto.RegisterMapType((map[string]string)(nil), "AVR.InputSourcesEntry")
	proto.RegisterMapType((map[string]*AVR_Zone)(nil), "AVR.ZonesEntry")
	proto.RegisterType((*AVR_Zone)(nil), "AVR.Zone")
	proto.RegisterType((*AVR_Zone_ListeningMod)(nil), "AVR.Zone.ListeningMod")
	proto.RegisterType((*AVR_Zone_Source)(nil), "AVR.Zone.Source")
	proto.RegisterType((*AVR_PowerToggle)(nil), "AVR_PowerToggle")
	proto.RegisterType((*ZoneUpdate)(nil), "ZoneUpdate")
	proto.RegisterType((*Light)(nil), "Light")
	proto.RegisterType((*Device)(nil), "Device")
	proto.RegisterType((*Item)(nil), "Item")
	proto.RegisterType((*Property)(nil), "Property")
	proto.RegisterType((*ValueList)(nil), "ValueList")
	proto.RegisterType((*ListValue)(nil), "ListValue")
	proto.RegisterType((*PropertyUpdate)(nil), "PropertyUpdate")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for AVRService service

type AVRServiceClient interface {
	GetAVRs(ctx context.Context, in *Null, opts ...grpc.CallOption) (AVRService_GetAVRsClient, error)
	Power(ctx context.Context, in *AVR_PowerToggle, opts ...grpc.CallOption) (*AVR, error)
	UpdateZone(ctx context.Context, in *ZoneUpdate, opts ...grpc.CallOption) (*ZoneUpdate, error)
	Subscribe(ctx context.Context, in *AVR, opts ...grpc.CallOption) (AVRService_SubscribeClient, error)
}

type aVRServiceClient struct {
	cc *grpc.ClientConn
}

func NewAVRServiceClient(cc *grpc.ClientConn) AVRServiceClient {
	return &aVRServiceClient{cc}
}

func (c *aVRServiceClient) GetAVRs(ctx context.Context, in *Null, opts ...grpc.CallOption) (AVRService_GetAVRsClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_AVRService_serviceDesc.Streams[0], c.cc, "/AVRService/GetAVRs", opts...)
	if err != nil {
		return nil, err
	}
	x := &aVRServiceGetAVRsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type AVRService_GetAVRsClient interface {
	Recv() (*AVR, error)
	grpc.ClientStream
}

type aVRServiceGetAVRsClient struct {
	grpc.ClientStream
}

func (x *aVRServiceGetAVRsClient) Recv() (*AVR, error) {
	m := new(AVR)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *aVRServiceClient) Power(ctx context.Context, in *AVR_PowerToggle, opts ...grpc.CallOption) (*AVR, error) {
	out := new(AVR)
	err := grpc.Invoke(ctx, "/AVRService/Power", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aVRServiceClient) UpdateZone(ctx context.Context, in *ZoneUpdate, opts ...grpc.CallOption) (*ZoneUpdate, error) {
	out := new(ZoneUpdate)
	err := grpc.Invoke(ctx, "/AVRService/UpdateZone", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aVRServiceClient) Subscribe(ctx context.Context, in *AVR, opts ...grpc.CallOption) (AVRService_SubscribeClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_AVRService_serviceDesc.Streams[1], c.cc, "/AVRService/Subscribe", opts...)
	if err != nil {
		return nil, err
	}
	x := &aVRServiceSubscribeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type AVRService_SubscribeClient interface {
	Recv() (*AVR, error)
	grpc.ClientStream
}

type aVRServiceSubscribeClient struct {
	grpc.ClientStream
}

func (x *aVRServiceSubscribeClient) Recv() (*AVR, error) {
	m := new(AVR)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for AVRService service

type AVRServiceServer interface {
	GetAVRs(*Null, AVRService_GetAVRsServer) error
	Power(context.Context, *AVR_PowerToggle) (*AVR, error)
	UpdateZone(context.Context, *ZoneUpdate) (*ZoneUpdate, error)
	Subscribe(*AVR, AVRService_SubscribeServer) error
}

func RegisterAVRServiceServer(s *grpc.Server, srv AVRServiceServer) {
	s.RegisterService(&_AVRService_serviceDesc, srv)
}

func _AVRService_GetAVRs_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Null)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(AVRServiceServer).GetAVRs(m, &aVRServiceGetAVRsServer{stream})
}

type AVRService_GetAVRsServer interface {
	Send(*AVR) error
	grpc.ServerStream
}

type aVRServiceGetAVRsServer struct {
	grpc.ServerStream
}

func (x *aVRServiceGetAVRsServer) Send(m *AVR) error {
	return x.ServerStream.SendMsg(m)
}

func _AVRService_Power_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AVR_PowerToggle)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AVRServiceServer).Power(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AVRService/Power",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AVRServiceServer).Power(ctx, req.(*AVR_PowerToggle))
	}
	return interceptor(ctx, in, info, handler)
}

func _AVRService_UpdateZone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ZoneUpdate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AVRServiceServer).UpdateZone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AVRService/UpdateZone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AVRServiceServer).UpdateZone(ctx, req.(*ZoneUpdate))
	}
	return interceptor(ctx, in, info, handler)
}

func _AVRService_Subscribe_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(AVR)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(AVRServiceServer).Subscribe(m, &aVRServiceSubscribeServer{stream})
}

type AVRService_SubscribeServer interface {
	Send(*AVR) error
	grpc.ServerStream
}

type aVRServiceSubscribeServer struct {
	grpc.ServerStream
}

func (x *aVRServiceSubscribeServer) Send(m *AVR) error {
	return x.ServerStream.SendMsg(m)
}

var _AVRService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "AVRService",
	HandlerType: (*AVRServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Power",
			Handler:    _AVRService_Power_Handler,
		},
		{
			MethodName: "UpdateZone",
			Handler:    _AVRService_UpdateZone_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetAVRs",
			Handler:       _AVRService_GetAVRs_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Subscribe",
			Handler:       _AVRService_Subscribe_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "proto/service.proto",
}

func init() { proto.RegisterFile("proto/service.proto", fileDescriptor_service_cbcd1741cbb3dc10) }

var fileDescriptor_service_cbcd1741cbb3dc10 = []byte{
	// 944 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0x6f, 0x8f, 0xdb, 0xc4,
	0x13, 0x3e, 0x3b, 0xb6, 0x13, 0x4f, 0xda, 0xeb, 0xfd, 0xb6, 0xf7, 0xab, 0xdc, 0x14, 0x41, 0x64,
	0xb8, 0x2a, 0x54, 0xc2, 0x39, 0x0e, 0x09, 0xa1, 0x0a, 0x09, 0xe5, 0x5a, 0xc4, 0x45, 0xd7, 0x6b,
	0xc3, 0xe6, 0xb0, 0x44, 0xdf, 0x54, 0x8e, 0xb3, 0x4d, 0x2d, 0x1c, 0x6f, 0xe4, 0x3f, 0x07, 0xe6,
	0x23, 0xc0, 0xf7, 0xe0, 0x3d, 0x6f, 0xf9, 0x1c, 0x7c, 0x1f, 0xd0, 0xec, 0xae, 0xe3, 0x0d, 0x77,
	0x27, 0x21, 0x5e, 0x65, 0x9f, 0x67, 0x66, 0x76, 0x67, 0x67, 0x9f, 0x19, 0x07, 0xee, 0x6f, 0x72,
	0x5e, 0xf2, 0x71, 0xc1, 0xf2, 0xab, 0x24, 0x66, 0x81, 0x40, 0x83, 0x87, 0x2b, 0xce, 0x57, 0x29,
	0x1b, 0x0b, 0xb4, 0xa8, 0xde, 0x8e, 0xa3, 0xac, 0x96, 0x26, 0xdf, 0x01, 0x2b, 0xab, 0xd2, 0xd4,
	0xff, 0xcb, 0x86, 0xce, 0x24, 0xa4, 0x64, 0x1f, 0xcc, 0x64, 0xe9, 0x19, 0x43, 0x63, 0xd4, 0xa1,
	0x66, 0xb2, 0x24, 0x87, 0x60, 0x6f, 0xf8, 0x8f, 0x2c, 0xf7, 0xcc, 0xa1, 0x31, 0xea, 0x51, 0x09,
	0xc8, 0x11, 0xd8, 0x3f, 0xf3, 0x8c, 0x15, 0x5e, 0x67, 0xd8, 0x19, 0xf5, 0x4f, 0xee, 0x05, 0x93,
	0x90, 0x06, 0xaf, 0x91, 0xf9, 0x3a, 0x2b, 0xf3, 0x9a, 0x4a, 0x2b, 0x79, 0x0a, 0x77, 0x92, 0x6c,
	0x53, 0x95, 0x73, 0x5e, 0xe5, 0x31, 0x2b, 0x3c, 0x4b, 0x78, 0x3f, 0x10, 0xde, 0x53, 0xcd, 0x20,
	0x83, 0x76, 0x7c, 0x09, 0x01, 0xeb, 0x65, 0xb4, 0x66, 0x9e, 0x3d, 0x34, 0x46, 0x2e, 0x15, 0xeb,
	0xc1, 0x9f, 0x1d, 0xb0, 0xf0, 0x94, 0x36, 0x2b, 0x43, 0xcf, 0x8a, 0x80, 0x95, 0x61, 0x88, 0x29,
	0x43, 0x70, 0x4d, 0x1e, 0x80, 0x73, 0xc5, 0xd3, 0x6a, 0xcd, 0xbc, 0xce, 0xd0, 0x18, 0xd9, 0x54,
	0x21, 0xe4, 0x93, 0xe2, 0x22, 0x4a, 0x32, 0xcf, 0x12, 0x5b, 0x28, 0x44, 0x3e, 0x82, 0xbb, 0x71,
	0x95, 0xe7, 0x2c, 0x53, 0x89, 0xa8, 0xf3, 0x77, 0x49, 0xe2, 0x41, 0xb7, 0xa8, 0xb3, 0x38, 0xe4,
	0xa9, 0xe7, 0x88, 0xf0, 0x06, 0x36, 0x96, 0x79, 0x1e, 0x7b, 0xdd, 0xd6, 0x32, 0xcf, 0x63, 0xcc,
	0x6e, 0x5d, 0x95, 0xcc, 0xeb, 0x09, 0x5a, 0xac, 0xc9, 0x31, 0xdc, 0x57, 0x1b, 0xbf, 0x48, 0x8a,
	0x92, 0x65, 0x49, 0xb6, 0xba, 0xe0, 0x4b, 0xcf, 0x15, 0x67, 0xde, 0x64, 0x22, 0x5f, 0xc2, 0xdd,
	0x54, 0xc3, 0x85, 0x07, 0x5a, 0x4d, 0xb1, 0x36, 0x81, 0xee, 0x4e, 0x77, 0x9d, 0xc9, 0x13, 0xe8,
	0x16, 0xea, 0x2d, 0xfa, 0x22, 0xee, 0xa0, 0x8d, 0x93, 0x57, 0xa3, 0x8d, 0xc3, 0xe0, 0x73, 0xb8,
	0xb3, 0x73, 0x32, 0x01, 0xeb, 0x19, 0x5f, 0x32, 0x51, 0x72, 0x97, 0x8a, 0xf5, 0xf6, 0x91, 0x4c,
	0xed, 0x91, 0x8e, 0xc1, 0x51, 0x55, 0xfa, 0xb7, 0x11, 0xcf, 0x00, 0x5a, 0xed, 0x90, 0x03, 0xe8,
	0xfc, 0xc0, 0x6a, 0x15, 0x84, 0x4b, 0xf2, 0x01, 0xd8, 0x57, 0x51, 0x5a, 0xc9, 0xa0, 0xfe, 0x89,
	0xbb, 0xcd, 0x99, 0x4a, 0xfe, 0xa9, 0xf9, 0x85, 0x31, 0xf8, 0x0a, 0xfe, 0x77, 0x4d, 0x52, 0x37,
	0xec, 0x75, 0xa8, 0xef, 0xe5, 0x6a, 0x1b, 0xf8, 0x9f, 0xc2, 0xbd, 0x49, 0x48, 0xdf, 0xcc, 0x50,
	0x4a, 0x97, 0x7c, 0xb5, 0x4a, 0x19, 0x36, 0xc3, 0x74, 0xa6, 0xa2, 0xcd, 0xe9, 0x0c, 0xf1, 0xab,
	0x4c, 0x75, 0x82, 0xf9, 0x2a, 0xf3, 0xff, 0x30, 0x64, 0xe6, 0xdf, 0x6d, 0x96, 0x51, 0xc9, 0xc8,
	0xff, 0xc1, 0xc1, 0x1d, 0xb6, 0x21, 0xf6, 0x24, 0xa4, 0xd3, 0x19, 0x79, 0x04, 0x2e, 0x3a, 0xbd,
	0xd1, 0xee, 0xdd, 0x43, 0x02, 0x31, 0xe6, 0x33, 0x2f, 0xa3, 0x52, 0xca, 0xb3, 0x47, 0x25, 0x40,
	0x75, 0x86, 0x52, 0xb5, 0x96, 0x54, 0x6d, 0xb8, 0x55, 0xad, 0x26, 0x4b, 0x9b, 0x3a, 0xad, 0x1e,
	0xe7, 0xbb, 0x7a, 0x9c, 0xb7, 0x7a, 0x9c, 0xef, 0xea, 0x51, 0x41, 0xff, 0x5b, 0xb0, 0x5f, 0x24,
	0xab, 0x77, 0xe5, 0xf6, 0x49, 0x8c, 0xf6, 0x49, 0x30, 0xad, 0x99, 0xde, 0xf6, 0x02, 0x90, 0xf7,
	0x01, 0x4e, 0x73, 0x8c, 0xc9, 0x58, 0x51, 0xa8, 0x86, 0xd2, 0x18, 0xff, 0x7b, 0x70, 0x9e, 0x33,
	0x9c, 0x3b, 0xe8, 0x39, 0x5d, 0xb2, 0xac, 0x4c, 0xde, 0x26, 0xaa, 0x4b, 0x5d, 0xaa, 0x31, 0x37,
	0xc9, 0x80, 0x3c, 0x02, 0x7b, 0x5a, 0xb2, 0x75, 0x23, 0x69, 0x3b, 0x40, 0x44, 0x25, 0xe7, 0xd7,
	0x60, 0xe1, 0xe2, 0x3f, 0x6d, 0x4c, 0xc0, 0xba, 0xac, 0x37, 0xb2, 0xc4, 0x2e, 0x15, 0x6b, 0xf2,
	0x31, 0xc0, 0x2c, 0xe7, 0x1b, 0x96, 0x97, 0x09, 0x6b, 0x4e, 0x74, 0x03, 0x45, 0xd5, 0x54, 0x33,
	0xfa, 0xbf, 0x1b, 0xd0, 0x6b, 0x0c, 0x37, 0x16, 0x6b, 0x00, 0xdd, 0x53, 0xce, 0x53, 0x16, 0x29,
	0x6d, 0x9c, 0xed, 0xd1, 0x86, 0x20, 0x1e, 0x38, 0x2f, 0xab, 0xf5, 0x82, 0xe5, 0xe2, 0xf4, 0xce,
	0xd9, 0x1e, 0x55, 0x18, 0xa3, 0x9e, 0xb3, 0x38, 0x59, 0x47, 0xa9, 0x78, 0x64, 0x13, 0xa3, 0x14,
	0x41, 0x0e, 0xc1, 0xba, 0x64, 0x3f, 0x95, 0x72, 0xf8, 0x9c, 0xed, 0x51, 0x81, 0xc8, 0x10, 0x2c,
	0xec, 0x48, 0xf1, 0xc4, 0xfd, 0x13, 0x08, 0x42, 0xd4, 0x2e, 0x32, 0xe8, 0x81, 0xbf, 0xa7, 0x5d,
	0xb0, 0x05, 0xe9, 0x5f, 0x80, 0xbb, 0xb5, 0x92, 0xf7, 0xc0, 0x3d, 0x67, 0xf5, 0x24, 0x2e, 0x93,
	0xab, 0x26, 0xf1, 0x96, 0x20, 0x3e, 0x38, 0xc2, 0xb5, 0xf0, 0x4c, 0x51, 0x05, 0x10, 0x13, 0x44,
	0x50, 0x54, 0x59, 0xfc, 0xdf, 0x0c, 0x70, 0xb7, 0x2c, 0x76, 0xd5, 0x79, 0xdb, 0x55, 0xe7, 0xac,
	0x46, 0x5d, 0xaa, 0xed, 0xa5, 0x5e, 0x14, 0xd2, 0x2b, 0xd3, 0xb9, 0xbd, 0x32, 0xd6, 0xed, 0x95,
	0xb1, 0x6f, 0xab, 0x8c, 0xa3, 0x57, 0xa6, 0xbd, 0xf7, 0xaf, 0x06, 0xec, 0x37, 0x6f, 0xa5, 0xba,
	0xf2, 0x09, 0x1c, 0x48, 0x51, 0x5e, 0xd3, 0xcd, 0x35, 0x9e, 0x3c, 0x86, 0x7d, 0x54, 0x99, 0xe6,
	0x29, 0x75, 0xf4, 0x0f, 0x96, 0x1c, 0xb5, 0x8a, 0x10, 0x17, 0xdb, 0xd1, 0xce, 0xd6, 0x74, 0xf2,
	0x8b, 0x01, 0x30, 0x09, 0xe9, 0x5c, 0x7e, 0x8c, 0xb1, 0x17, 0xbf, 0x61, 0xe5, 0x24, 0xa4, 0x05,
	0xb1, 0x03, 0xfc, 0xea, 0x0e, 0x2c, 0x1c, 0x65, 0xc7, 0x06, 0x4e, 0x38, 0xd9, 0x61, 0x62, 0x1e,
	0xeb, 0x33, 0x48, 0xba, 0x90, 0xc7, 0x00, 0xf2, 0x3a, 0xe2, 0xf3, 0xd7, 0x0f, 0xda, 0xa9, 0x33,
	0xd0, 0x01, 0x79, 0x08, 0xee, 0xbc, 0x5a, 0x14, 0x71, 0x9e, 0x2c, 0x18, 0x11, 0xa1, 0xcd, 0x19,
	0xa7, 0x47, 0xaf, 0x3f, 0x5c, 0x25, 0xe5, 0xbb, 0x6a, 0x11, 0xc4, 0x7c, 0x3d, 0xce, 0xf9, 0x92,
	0xe5, 0xeb, 0x71, 0x54, 0x2d, 0x13, 0xfe, 0xc9, 0x26, 0xca, 0x58, 0xaa, 0xfe, 0x1d, 0x38, 0xe2,
	0xe7, 0xb3, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0x36, 0x07, 0x54, 0xc1, 0x49, 0x08, 0x00, 0x00,
}
